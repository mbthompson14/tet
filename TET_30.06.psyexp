<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1200]" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="0.7255, 0.7255, 0.7255" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="TET_test" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="anticipation">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="early_hit = false;&amp;#10;startle_probe_sent = false;&amp;#10;if ((distance === &quot;far&quot;)) {&amp;#10;    size_factor = 16;&amp;#10;    time_factor = 4;&amp;#10;} else {&amp;#10;    if ((distance === &quot;near&quot;)) {&amp;#10;        size_factor = 2;&amp;#10;        time_factor = 1;&amp;#10;    } else {&amp;#10;        if ((distance === &quot;none&quot;)) {&amp;#10;            size_factor = 1;&amp;#10;            time_factor = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;size_factor&quot;, size_factor);&amp;#10;psychoJS.experiment.addData(&quot;time_factor&quot;, time_factor);&amp;#10;img_size = [(x / size_factor), (y / size_factor)];&amp;#10;antic_img_dur = (anticipation_dur / 1000);&amp;#10;startle_t = (startle_start / 1000);&amp;#10;if (startle) {&amp;#10;    startle_dur = 1;&amp;#10;} else {&amp;#10;    startle_dur = 0;&amp;#10;}&amp;#10;if ((condition === &quot;Threat&quot;)) {&amp;#10;    if ((distance === &quot;none&quot;)) {&amp;#10;        hex_start = &quot;04&quot;;&amp;#10;        hex_startle = &quot;06&quot;;&amp;#10;    } else {&amp;#10;        if ((distance === &quot;far&quot;)) {&amp;#10;            hex_start = &quot;14&quot;;&amp;#10;            hex_startle = &quot;16&quot;;&amp;#10;        } else {&amp;#10;            hex_start = &quot;44&quot;;&amp;#10;            hex_startle = &quot;46&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((distance === &quot;none&quot;)) {&amp;#10;        hex_start = &quot;08&quot;;&amp;#10;        hex_startle = &quot;0A&quot;;&amp;#10;    } else {&amp;#10;        if ((distance === &quot;far&quot;)) {&amp;#10;            hex_start = &quot;28&quot;;&amp;#10;            hex_startle = &quot;2A&quot;;&amp;#10;        } else {&amp;#10;            hex_start = &quot;88&quot;;&amp;#10;            hex_startle = &quot;8A&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;ser.write(str.encode(hex_start));&amp;#10;time.sleep(0.005);&amp;#10;ser.write(str.encode(&quot;00&quot;));&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;# for practice trials:&amp;#10;# anticipation routine repeats if spacebar is pressed during it&amp;#10;# too_early_outer controls how many times too_early_inner can be repeated (really big number)&amp;#10;early_hit = False&amp;#10;&amp;#10;startle_probe_sent = False&amp;#10;&amp;#10;# define size and time factors for image&amp;#10;if distance == &quot;far&quot;:&amp;#10;    size_factor = 16&amp;#10;    time_factor = 4&amp;#10;elif distance == &quot;near&quot;:&amp;#10;    size_factor = 2&amp;#10;    time_factor = 1&amp;#10;elif distance == &quot;none&quot;:&amp;#10;    size_factor = 1&amp;#10;    time_factor = 0&amp;#10;&amp;#10;# add these vars to auto output&amp;#10;thisExp.addData('size_factor', size_factor)&amp;#10;thisExp.addData('time_factor', time_factor)&amp;#10;&amp;#10;# set size of image, changes every repeat&amp;#10;img_size = (x/size_factor, y/size_factor)&amp;#10;&amp;#10;# convert duration to seconds&amp;#10;antic_img_dur = anticipation_dur/1000&amp;#10;&amp;#10;# convert startle start to seconds&amp;#10;startle_t = startle_start/1000&amp;#10;&amp;#10;# only play startle on startle trials&amp;#10;if startle:&amp;#10;    startle_dur = 1&amp;#10;else:&amp;#10;    startle_dur = 0&amp;#10;&amp;#10;# assign unique codes for each condition start, end &amp; startle&amp;#10;# see new_markers.docx in dropbox for a table of the codes&amp;#10;# update: I don't think marking the end of the stimulus is necessary&amp;#10;if condition == 'Threat':&amp;#10;    if distance == 'none':&amp;#10;        hex_start = '04'&amp;#10;        #hex_end = '0C'&amp;#10;        hex_startle = '06'&amp;#10;    elif distance == 'far':&amp;#10;        hex_start = '14'&amp;#10;        #hex_end = '24'&amp;#10;        hex_startle = '16'&amp;#10;    else:&amp;#10;        hex_start = '44'&amp;#10;        #hex_end = '84'&amp;#10;        hex_startle = '46'&amp;#10;else:&amp;#10;    if distance == 'none':&amp;#10;        hex_start = '08'&amp;#10;        #hex_end = '18'&amp;#10;        hex_startle = '0A'&amp;#10;    elif distance == 'far':&amp;#10;        hex_start = '28'&amp;#10;        #hex_end = '48'&amp;#10;        hex_startle = '2A'&amp;#10;    else:&amp;#10;        hex_start = '88'&amp;#10;        #hex_end = '10'&amp;#10;        hex_startle = '8A'&amp;#10;&amp;#10;# stimulus marker&amp;#10;ser.write(str.encode(hex_start))&amp;#10;time.sleep(0.005)&amp;#10;ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# startle probe marker (only once)&amp;#10;if startle:&amp;#10;    if startle_sound.status == STARTED and startle_probe_sent == False:&amp;#10;        ser.write(str.encode(hex_startle))&amp;#10;        time.sleep(0.005)&amp;#10;        ser.write(str.encode('00'))&amp;#10;        startle_probe_sent = True&amp;#10;&amp;#10;if practice == 1:&amp;#10;    if len(_antic_resp_allKeys):&amp;#10;        continueRoutine = False&amp;#10;        early_hit = True" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (startle) {&amp;#10;    if (((startle_sound.status === PsychoJS.Status.STARTED) &amp;&amp; (startle_probe_sent === false))) {&amp;#10;        ser.write(str.encode(hex_startle));&amp;#10;        time.sleep(0.005);&amp;#10;        ser.write(str.encode(&quot;00&quot;));&amp;#10;        startle_probe_sent = true;&amp;#10;    }&amp;#10;}&amp;#10;if ((practice === 1)) {&amp;#10;    if (_antic_resp_allKeys.length) {&amp;#10;        continueRoutine = false;&amp;#10;        early_hit = true;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if (startle) {&amp;#10;    time_startle = startle_sound.tStartRefresh;&amp;#10;    last_stim = time_startle;&amp;#10;}&amp;#10;if (((practice === 1) &amp;&amp; (! early_hit))) {&amp;#10;    too_early_inner.finished = true;&amp;#10;    too_early_outer.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if startle:&amp;#10;    time_startle = startle_sound.tStartRefresh&amp;#10;    last_stim = time_startle&amp;#10;&amp;#10;if practice == 1 and not early_hit:&amp;#10;    too_early_inner.finished = True&amp;#10;    too_early_outer.finished = True&amp;#10;&amp;#10;# stimulus end&amp;#10;#ser.write(str.encode(hex_end))&amp;#10;#time.sleep(0.005)&amp;#10;#ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <ImageComponent name="antic_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$image" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="antic_img" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$antic_img_dur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="antic_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="antic_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$antic_img_dur" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <SoundComponent name="startle_sound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="startle_sound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\whitenoise.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$startle_t" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$startle_dur" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
    </Routine>
    <Routine name="setup">
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="import random&amp;#10;import time&amp;#10;&amp;#10;#Hide mouse&amp;#10;win.mouseVisible = False&amp;#10;&amp;#10;# default (fullscreen) image size in pixels&amp;#10;x = win.monitor.getSizePix()[0]&amp;#10;y = win.monitor.getSizePix()[1]&amp;#10;img_size = (x, y)&amp;#10;&amp;#10;# initialize variables, will be updated&amp;#10;attack_dur = 0.25&amp;#10;last_stim = 0&amp;#10;&amp;#10;# Setting up the serial port connection for triggering&amp;#10;# the biopac and digitimer system. &amp;#10;&amp;#10;import serial&amp;#10;ser = serial.Serial(&quot;COM4&quot;,115200, timeout=1)&amp;#10;print(ser.name)&amp;#10;&amp;#10;# Check if the port is open, if it was not, open it.&amp;#10;if(ser.isOpen() == False):&amp;#10;    ser.open()&amp;#10;&amp;#10;# set all pins to 0&amp;#10;ser.write(str.encode('00'))&amp;#10;&amp;#10;&amp;#10;# set up data output &amp;#10;&amp;#10;# custom VAS questionnaire file&amp;#10;# File name&amp;#10;custom_results_file = _thisDir + os.sep + u'data/%s_%s' % \&amp;#10;    (expInfo['participant'], expInfo['date']) + &quot;_questionnaire_custom.csv&quot;&amp;#10;# open file for writing&amp;#10;custom_q = open(custom_results_file,'w')&amp;#10;# write column names&amp;#10;custom_q.write('participant,stage,condition,distance,attack,startle,item_name,\&amp;#10;item_text,response,RT\n')" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#Hide mouse&amp;#10;win.mouseVisible = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="attack">
      <ImageComponent name="attack_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$image" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="attack_img" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every frame" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="attack_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="attack_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$duration" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="hit = false;&amp;#10;scream_sent = false;&amp;#10;duration = (attack_dur * time_factor);&amp;#10;total_frames = ((attack_dur * time_factor) * expInfo[&quot;frameRate&quot;]);&amp;#10;frame = 1;&amp;#10;play_loud_scream = false;&amp;#10;play_weak_scream = false;&amp;#10;play_scream_sound = false;&amp;#10;if (((condition === &quot;Threat&quot;) &amp;&amp; attac)) {&amp;#10;    if ((practice === 0)) {&amp;#10;        play_loud_scream = true;&amp;#10;        play_weak_scream = false;&amp;#10;    } else {&amp;#10;        if ((practice === 2)) {&amp;#10;            play_loud_scream = false;&amp;#10;            play_weak_scream = true;&amp;#10;        } else {&amp;#10;            play_loud_scream = false;&amp;#10;            play_weak_scream = false;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    play_loud_scream = false;&amp;#10;    play_weak_scream = false;&amp;#10;}&amp;#10;/*&amp;#10;# set scream duration&amp;#10;if condition == &quot;Threat&quot; and attac:&amp;#10;if practice == 0:&amp;#10;loud_scream_dur = 1.0&amp;#10;weak_scream_dur = 0.0&amp;#10;elif practice == 2:&amp;#10;loud_scream_dur = 0.0&amp;#10;weak_scream_dur = 1.0&amp;#10;else:&amp;#10;loud_scream_dur = 0.0&amp;#10;weak_scream_dur = 0.0&amp;#10;else:&amp;#10;loud_scream_dur = 0.0&amp;#10;weak_scream_dur = 0.0*/&amp;#10;if ((attac &amp;&amp; (distance !== &quot;none&quot;))) {&amp;#10;    ser.write(str.encode(&quot;60&quot;));&amp;#10;    time.sleep(0.005);&amp;#10;    ser.write(str.encode(&quot;00&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# hit is False unless user presses spacebar in time&amp;#10;hit = False&amp;#10;&amp;#10;scream_sent = False&amp;#10;&amp;#10;# define the duration of this attack&amp;#10;duration = attack_dur*time_factor&amp;#10;&amp;#10;# find the total number of frames of this attack&amp;#10;total_frames = (attack_dur*time_factor)*expInfo['frameRate']&amp;#10;&amp;#10;# initialize frame counter&amp;#10;frame = 1&amp;#10;&amp;#10;# scream starts immediately after attack&amp;#10;#scream_start = duration&amp;#10;&amp;#10;play_loud_scream = False&amp;#10;play_weak_scream = False&amp;#10;play_scream_sound = False&amp;#10;&amp;#10;if condition == &quot;Threat&quot; and attac:&amp;#10;    if practice == 0:&amp;#10;        play_loud_scream = True&amp;#10;        play_weak_scream = False&amp;#10;    elif practice == 2:&amp;#10;        play_loud_scream = False&amp;#10;        play_weak_scream = True&amp;#10;    else:&amp;#10;        play_loud_scream = False&amp;#10;        play_weak_scream = False&amp;#10;else:&amp;#10;    play_loud_scream = False&amp;#10;    play_weak_scream = False&amp;#10;    &amp;#10;'''&amp;#10;# set scream duration&amp;#10;if condition == &quot;Threat&quot; and attac:&amp;#10;    if practice == 0:&amp;#10;        loud_scream_dur = 1.0&amp;#10;        weak_scream_dur = 0.0&amp;#10;    elif practice == 2:&amp;#10;        loud_scream_dur = 0.0&amp;#10;        weak_scream_dur = 1.0&amp;#10;    else:&amp;#10;        loud_scream_dur = 0.0&amp;#10;        weak_scream_dur = 0.0&amp;#10;else:&amp;#10;    loud_scream_dur = 0.0&amp;#10;    weak_scream_dur = 0.0&amp;#10;'''&amp;#10;&amp;#10;# attack marker&amp;#10;if attac and distance != &quot;none&quot;:&amp;#10;    ser.write(str.encode('60'))&amp;#10;    time.sleep(0.005)&amp;#10;    ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if attac and distance != &quot;none&quot;:&amp;#10;    # calculate new dimensions of the image for each frame&amp;#10;    curr_x = x/size_factor + frame*(x-x/size_factor)/total_frames&amp;#10;    curr_y = y/size_factor + frame*(y-y/size_factor)/total_frames&amp;#10;    # apply new dimensions&amp;#10;    img_size = (curr_x, curr_y)&amp;#10;    # check if spacebar is pressed&amp;#10;    if len(_attack_resp_allKeys):&amp;#10;        hit = True&amp;#10;        continueRoutine = False&amp;#10;    frame = frame + 1&amp;#10;    &amp;#10;attack_routine_time = t&amp;#10;&amp;#10;if play_loud_scream or play_weak_scream:&amp;#10;    if attack_routine_time &gt;= duration:&amp;#10;        play_scream_sound = True&amp;#10;else:&amp;#10;    if attack_routine_time &gt;= duration:&amp;#10;        continueRoutine = False&amp;#10;&amp;#10;# send scream marker (if scream)&amp;#10;if (loud_scream.status == STARTED or weak_scream.status == STARTED) \&amp;#10;    and scream_sent == False:&amp;#10;    if condition == &quot;Threat&quot; and attac and (practice == 0 or practice == 2):&amp;#10;        ser.write(str.encode('30'))&amp;#10;        time.sleep(0.005)&amp;#10;        ser.write(str.encode('00'))&amp;#10;        scream_sent = True&amp;#10;        &amp;#10;if loud_scream.status == FINISHED or weak_scream.status == FINISHED:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((attac &amp;&amp; (distance !== &quot;none&quot;))) {&amp;#10;    curr_x = ((x / size_factor) + ((frame * (x - (x / size_factor))) / total_frames));&amp;#10;    curr_y = ((y / size_factor) + ((frame * (y - (y / size_factor))) / total_frames));&amp;#10;    img_size = [curr_x, curr_y];&amp;#10;    if (_attack_resp_allKeys.length) {&amp;#10;        hit = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    frame = (frame + 1);&amp;#10;}&amp;#10;attack_routine_time = t;&amp;#10;if ((play_loud_scream || play_weak_scream)) {&amp;#10;    if ((attack_routine_time &gt;= duration)) {&amp;#10;        play_scream_sound = true;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((attack_routine_time &gt;= duration)) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;if ((((loud_scream.status === PsychoJS.Status.STARTED) || (weak_scream.status === PsychoJS.Status.STARTED)) &amp;&amp; (scream_sent === false))) {&amp;#10;    if ((((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; ((practice === 0) || (practice === 2)))) {&amp;#10;        ser.write(str.encode(&quot;30&quot;));&amp;#10;        time.sleep(0.005);&amp;#10;        ser.write(str.encode(&quot;00&quot;));&amp;#10;        scream_sent = true;&amp;#10;    }&amp;#10;}&amp;#10;if (((loud_scream.status === PsychoJS.Status.FINISHED) || (weak_scream.status === PsychoJS.Status.FINISHED))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((((practice === 0) &amp;&amp; (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit))) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))) {&amp;#10;    time_scream = loud_scream.tStartRefresh;&amp;#10;    last_stim = time_scream;&amp;#10;} else {&amp;#10;    if ((((practice === 2) &amp;&amp; (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit))) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))) {&amp;#10;        time_scream = weak_scream.tStartRefresh;&amp;#10;        last_stim = time_scream;&amp;#10;    }&amp;#10;}&amp;#10;if (((practice &gt; 0) &amp;&amp; (distance === &quot;near&quot;))) {&amp;#10;    if (hit) {&amp;#10;        attack_dur = (attack_dur - 0.05);&amp;#10;    } else {&amp;#10;        attack_dur = (attack_dur + 0.05);&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((((practice === 0) &amp;&amp; (distance === &quot;near&quot;)) &amp;&amp; (condition === &quot;Threat&quot;))) {&amp;#10;        if (hit) {&amp;#10;            attack_dur = (attack_dur - 0.05);&amp;#10;        } else {&amp;#10;            attack_dur = (attack_dur + 0.05);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if (practice == 0) and \&amp;#10;    (condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;):&amp;#10;    time_scream = loud_scream.tStartRefresh&amp;#10;    last_stim = time_scream&amp;#10;elif (practice == 2) and \&amp;#10;    (condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;):&amp;#10;    time_scream = weak_scream.tStartRefresh&amp;#10;    last_stim = time_scream&amp;#10;&amp;#10;# ajdust time on 'near' trials&amp;#10;# and in the real task on 'Threat' and 'near' trials&amp;#10;if practice &gt; 0 and distance == &quot;near&quot;:&amp;#10;    if hit:&amp;#10;        attack_dur = attack_dur - 0.05&amp;#10;    else:&amp;#10;        attack_dur = attack_dur + 0.05&amp;#10;elif practice == 0 and distance == &quot;near&quot; and condition == &quot;Threat&quot;:&amp;#10;    if hit:&amp;#10;        attack_dur = attack_dur - 0.05&amp;#10;    else:&amp;#10;        attack_dur = attack_dur + 0.05&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
      <SoundComponent name="loud_scream">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="loud_scream" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\scream.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="$play_loud_scream and play_scream_sound" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
      <SoundComponent name="weak_scream">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="weak_scream" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\screamweak.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="$play_weak_scream and play_scream_sound" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
    </Routine>
    <Routine name="rest">
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="console.log(tThisFlipGlobal);&amp;#10;console.log(last_stim);&amp;#10;console.log(startle_start);&amp;#10;console.log(fix_adj);&amp;#10;if ((practice === 1)) {&amp;#10;    fix_dur = 2;&amp;#10;} else {&amp;#10;    if ((startle === true)) {&amp;#10;        fix_dur = (((2.3 - (tThisFlipGlobal - last_stim)) - startle_start) + fix_adj);&amp;#10;    } else {&amp;#10;        if (((attac === true) &amp;&amp; (condition === &quot;Threat&quot;))) {&amp;#10;            fix_dur = (((2.3 - (tThisFlipGlobal - last_stim)) - anticipation_dur) + fix_adj);&amp;#10;        } else {&amp;#10;            fix_dur = (((2 - (tThisFlipGlobal - last_stim)) - anticipation_dur) + fix_adj);&amp;#10;        }&amp;#10;    }&amp;#10;    if ((fix_dur &lt; 1)) {&amp;#10;        fix_dur = random.uniform(1, 3);&amp;#10;    }&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;fixation_duration&quot;, fix_dur);&amp;#10;ser.write(str.encode(&quot;A0&quot;));&amp;#10;time.sleep(0.005);&amp;#10;ser.write(str.encode(&quot;00&quot;));&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="print(tThisFlipGlobal)&amp;#10;print(last_stim)&amp;#10;print(startle_start)&amp;#10;print(fix_adj)&amp;#10;if practice == 1:&amp;#10;    fix_dur = 2&amp;#10;else:&amp;#10;    if startle == True:&amp;#10;        fix_dur = 2.3 - (tThisFlipGlobal - last_stim) - startle_start + fix_adj&amp;#10;    else:&amp;#10;        if attac == True and condition == &quot;Threat&quot;:&amp;#10;            fix_dur = 2.3 - (tThisFlipGlobal - last_stim) - anticipation_dur + fix_adj&amp;#10;        else:&amp;#10;            fix_dur = 2 - (tThisFlipGlobal - last_stim) - anticipation_dur + fix_adj&amp;#10;    if fix_dur &lt; 1:&amp;#10;        fix_dur = random.uniform(1,3) # randomly select a float between 1&amp;3 (both included)&amp;#10;&amp;#10;# add fix_dur to auto output&amp;#10;thisExp.addData(&quot;fixation_duration&quot;, fix_dur)&amp;#10;&amp;#10;# fixation marker&amp;#10;ser.write(str.encode('A0'))&amp;#10;time.sleep(0.005)&amp;#10;ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="fixation">
        <Param name="color" updates="constant" val="$[-1.0000, -1.0000, -1.0000]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="fixation" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fix_dur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="rating_relief">
      <SliderComponent name="relief_slider">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;neutral&quot;, &quot;very pleasant&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="relief_slider" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_relief">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_relief" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How pleasant was the relief that you felt?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_5">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (((((practice === 0) || (practice === 2)) &amp;&amp; (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit))) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    psychoJS.window.mouseVisible = true;&amp;#10;    ser.write(str.encode(&quot;50&quot;));&amp;#10;    time.sleep(0.005);&amp;#10;    ser.write(str.encode(&quot;00&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if (practice == 0 or practice == 2) and \&amp;#10;    (condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;):&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    win.mouseVisible = True&amp;#10;    ser.write(str.encode('50'))  # rating marker&amp;#10;    time.sleep(0.005)&amp;#10;    ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if relief_slider.status == FINISHED:&amp;#10;    continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((relief_slider.status === PsychoJS.Status.FINISHED)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;if ((((practice === 0) || (practice === 2)) &amp;&amp; (! ((((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit)) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))))) {&amp;#10;    item_text = Instructions_relief.text.strip();&amp;#10;    custom_q.write((((((((((((((((((((expInfo[&quot;participant&quot;] + &quot;,&quot;) + stage) + &quot;,&quot;) + condition) + &quot;,&quot;) + distance) + &quot;,&quot;) + attac.toString()) + &quot;,&quot;) + startle.toString()) + &quot;,&quot;) + &quot;relief&quot;) + &quot;,&quot;) + item_text) + &quot;,&quot;) + relief_slider.getRating().toString()) + &quot;,&quot;) + relief_slider.getRT().toString()) + &quot;\n&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="win.mouseVisible = False&amp;#10;# save response if the slider was shown&amp;#10;if (practice == 0 or practice == 2) and not\&amp;#10;    ((condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;)):&amp;#10;    # define stage&amp;#10;    #if practice == 2:&amp;#10;    #    stage = 'habituation'&amp;#10;    #elif practice == 0:&amp;#10;    #    stage = 'real'&amp;#10;&amp;#10;    # get the item text and strip newlines/spaces&amp;#10;    item_text = Instructions_relief.text.strip()&amp;#10;&amp;#10;    # write entry into custom file&amp;#10;    custom_q.write(expInfo['participant'] +','+ stage +','+ condition +','+ \&amp;#10;        distance +','+ str(attac) +','+ str(startle) +','+ 'relief' +','+ item_text +','+ \&amp;#10;        str(relief_slider.getRating()) +','+ str(relief_slider.getRT()) + '\n')&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="rating_scream">
      <SliderComponent name="scream_slider">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;neutral&quot;, &quot;very unpleasant&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="scream_slider" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_scream">
        <Param name="color" updates="constant" val="red" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_scream" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How unpleasant was the scream that you heard?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_6">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((((practice === 0) || (practice === 2)) &amp;&amp; (! ((((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit)) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    psychoJS.window.mouseVisible = true;&amp;#10;    ser.write(str.encode(&quot;50&quot;));&amp;#10;    time.sleep(0.005);&amp;#10;    ser.write(str.encode(&quot;00&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if (practice == 0 or practice == 2) and not\&amp;#10;    ((condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;)):&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    win.mouseVisible = True&amp;#10;    ser.write(str.encode('50'))  # rating marker&amp;#10;    time.sleep(0.005)&amp;#10;    ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if scream_slider.status == FINISHED:&amp;#10;    continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((scream_slider.status === PsychoJS.Status.FINISHED)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;if (((((practice === 0) || (practice === 2)) &amp;&amp; (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit))) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))) {&amp;#10;    item_text = Instructions_scream.text.strip();&amp;#10;    custom_q.write((((((((((((((((((((expInfo[&quot;participant&quot;] + &quot;,&quot;) + stage) + &quot;,&quot;) + condition) + &quot;,&quot;) + distance) + &quot;,&quot;) + attac.toString()) + &quot;,&quot;) + startle.toString()) + &quot;,&quot;) + &quot;scream&quot;) + &quot;,&quot;) + item_text) + &quot;,&quot;) + scream_slider.getRating().toString()) + &quot;,&quot;) + scream_slider.getRT().toString()) + &quot;\n&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="win.mouseVisible = False&amp;#10;# save response if the slider was shown&amp;#10;if (practice == 0 or practice == 2) and \&amp;#10;    (condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;):&amp;#10;    # define stage&amp;#10;    #if practice == 2:&amp;#10;    #    stage = 'habituation'&amp;#10;    #elif practice == 0:&amp;#10;    #    stage = 'real'&amp;#10;&amp;#10;    # get the item text and strip newlines/spaces&amp;#10;    item_text = Instructions_scream.text.strip()&amp;#10;&amp;#10;    # write entry into custom file&amp;#10;    custom_q.write(expInfo['participant'] +','+ stage +','+ condition +','+ \&amp;#10;        distance +','+ str(attac) +','+ str(startle) +','+ 'scream' +','+ item_text +','+ \&amp;#10;        str(scream_slider.getRating()) +','+ str(scream_slider.getRT()) + '\n')&amp;#10;        &amp;#10;# clear channels&amp;#10;#ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="start_real_task">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The real experiment will start automatically in a few seconds.&amp;#10;&amp;#10;Remember to always push the spacebar as fast as you can when you see a picture growing in size." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="start_habituation">
      <TextComponent name="hab_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="hab_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You will now start the second practice round. During this you will hear the white noises, and a low-volume version of the scream. In the real experiment, the scream will be played at full volume. &amp;#10;&amp;#10;After each trial you will also see relief and unpleasantness ratings. These rating screens will only be presented for 4 seconds. So don’t think too long, but try to answer spontaneously.&amp;#10;&amp;#10;Please push the spacebar as fast as possible when an image starts growing in size. &amp;#10;&amp;#10;Please look at the middle of the screen and try to move as little as possible.&amp;#10;&amp;#10;When you start the practice trials you will first hear the low-volume version of the scream to get acquainted with that sound too. Then the practice round will immediately start.&amp;#10;&amp;#10;&lt;please notify the researcher before continuing&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="start_practice">
      <TextComponent name="practice_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="practice_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You are going to practice first. Here you will NOT get to hear the loud screams yet. However, you will see on the screen when you would get to hear the loud scream if it was the real experiment. &amp;#10;&amp;#10;Try to push the spacebar as fast as possible when the images grow in size. &amp;#10;&amp;#10;Please look at the middle of the screen and move as little as possible. &amp;#10;&amp;#10;&lt;push the right arrow button to start&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="attack_feedback">
      <CodeComponent name="code_7">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((attac &amp;&amp; hit)) {&amp;#10;    attack_msg = &quot;WELL DONE!!!&quot;;&amp;#10;} else {&amp;#10;    if (((((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (! hit)) || (((condition === &quot;Threat&quot;) &amp;&amp; attac) &amp;&amp; (distance === &quot;none&quot;)))) {&amp;#10;        attack_msg = &quot;LOUD SCREAM!!!&quot;;&amp;#10;        time_scream = tThisFlipGlobal;&amp;#10;        last_stim = time_scream;&amp;#10;    } else {&amp;#10;        if ((attac &amp;&amp; (! hit))) {&amp;#10;            attack_msg = &quot;TOO SLOW!!!&quot;;&amp;#10;        } else {&amp;#10;            attack_msg = &quot;&quot;;&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if attac and hit:&amp;#10;    attack_msg = &quot;WELL DONE!!!&quot;&amp;#10;elif (condition == &quot;Threat&quot; and attac and not hit) or \&amp;#10;    (condition == &quot;Threat&quot; and attac and distance == &quot;none&quot;):&amp;#10;    attack_msg = &quot;LOUD SCREAM!!!&quot;&amp;#10;    time_scream = tThisFlipGlobal&amp;#10;    last_stim = time_scream&amp;#10;elif attac and not hit:&amp;#10;    attack_msg = &quot;TOO SLOW!!!&quot;&amp;#10;else:&amp;#10;    attack_msg = &quot;&quot;&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_7" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="feedback_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$attack_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="too_early">
      <CodeComponent name="code_8">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((! early_hit)) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    ser.write(str.encode(&quot;20&quot;));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if not early_hit:&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    # send too early marker&amp;#10;    ser.write(str.encode('20'))" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="ser.write(str.encode(&quot;00&quot;));&amp;#10;too_early_inner.finished = true;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# clear channels&amp;#10;ser.write(str.encode('00'))&amp;#10;&amp;#10;too_early_inner.finished = True" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_8" valType="code"/>
      </CodeComponent>
      <TextComponent name="too_early_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="too_early_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="TOO EARLY!!!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="img_example">
      <ImageComponent name="image_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Safe2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="intro_2">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="If you push the spacebar fast enough, the images will not reach full size.&amp;#10;&amp;#10;When the picture starts very small, you will have more time to push the spacebar, and prevent the picture from reaching full size.&amp;#10;&amp;#10;&lt;push the right arrow button for an example&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="intro_1">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome! During this experiment you will see large and small images which will sometimes grow in size. When the small images start to grow, it will be your job to prevent them from reaching full size by pressing the spacebar as fast as possible&amp;#10;&amp;#10;&lt;push the right arrow button to see an example of a large image&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="antic_ex_1">
      <CodeComponent name="code_10">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="img_size = [(x / 16), (y / 16)];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="img_size = (x/16, y/16)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
      <ImageComponent name="image_4">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Threat2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_4" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="intro_3">
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="When the picture starts slightly bigger, you will have less time to push the spacebar. Which is why you will have to react faster.&amp;#10;&amp;#10;&lt;push the right arrow button for an example&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="antic_ex_2">
      <CodeComponent name="code_11">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="img_size = [(x / 2), (y / 2)];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="img_size = (x/2, y/2)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_11" valType="code"/>
      </CodeComponent>
      <ImageComponent name="image_5">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Safe2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_5" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="attack_ex_1">
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Threat2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every frame" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_9">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="frame = 1;&amp;#10;total_frames = ((0.25 * 4) * expInfo[&quot;frameRate&quot;]);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="frame = 1&amp;#10;# find the total number of frames&amp;#10;total_frames = (0.25*4)*expInfo['frameRate']" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# calculate new dimensions of the image for each frame&amp;#10;curr_x = x/16 + frame*(x-x/16)/total_frames&amp;#10;curr_y = y/16 + frame*(y-y/16)/total_frames&amp;#10;# apply new dimensions&amp;#10;img_size = (curr_x, curr_y)&amp;#10;frame = frame + 1" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="curr_x = ((x / 16) + ((frame * (x - (x / 16))) / total_frames));&amp;#10;curr_y = ((y / 16) + ((frame * (y - (y / 16))) / total_frames));&amp;#10;img_size = [curr_x, curr_y];&amp;#10;frame = (frame + 1);&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_9" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="attack_ex_2">
      <ImageComponent name="image_6">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Safe2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_6" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every frame" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.25" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_12">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="frame = 1;&amp;#10;total_frames = ((0.25 * 1) * expInfo[&quot;frameRate&quot;]);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="frame = 1&amp;#10;# find the total number of frames&amp;#10;total_frames = (0.25*1)*expInfo['frameRate']" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# calculate new dimensions of the image for each frame&amp;#10;curr_x = x/2 + frame*(x-x/2)/total_frames&amp;#10;curr_y = y/2 + frame*(y-y/2)/total_frames&amp;#10;# apply new dimensions&amp;#10;img_size = (curr_x, curr_y)&amp;#10;frame = frame + 1" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="curr_x = ((x / 2) + ((frame * (x - (x / 2))) / total_frames));&amp;#10;curr_y = ((y / 2) + ((frame * (y - (y / 2))) / total_frames));&amp;#10;img_size = [curr_x, curr_y];&amp;#10;frame = (frame + 1);&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_12" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="intro_4">
      <TextComponent name="text_5">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.4)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="During this task you will hear loud screams. When you see a purple image, you are safe and you will not hear a scream. When you see an orange image, there is a chance that you will hear a scream. " valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="text_6">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_6" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&lt;push the right arrow button&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="safe_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="safe_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.3, -0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Safe" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="scream_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="scream_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.3, -0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="SCREAM" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <ImageComponent name="image_7">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Safe2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_7" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.3, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.15, 0.1)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="image_8">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Threat2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_8" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.3, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.15, 0.1)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="intro_5">
      <TextComponent name="text_7">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_7" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The orange images will only give a scream when they reach full size. So, by preventing the orange images from reaching full size you will prevent the scream.&amp;#10;&amp;#10;Sometimes, an orange image is already full size when it is shown to you. In these cases, there is a chance that you will get to hear the loud scream, and you cannot prevent this. &amp;#10;&amp;#10;&lt;push the right arrow button to see the full size orange image&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="img_example_2">
      <ImageComponent name="image_9">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="pics2\Threat2.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_9" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="intro_6">
      <TextComponent name="text_8">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_8" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Purple images will never give loud screams, but for this experiment it remains very important that you also prevent these images from growing in size. &amp;#10;&amp;#10;So, at all times during this experiment, you should push the spacebar as fast as possible when you see that an image starts to grow in size. &amp;#10;&amp;#10;&lt;push the right arrow button&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="intro_7">
      <TextComponent name="text_9">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_9" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="That concludes the first practice phase of this experiment.&amp;#10;&amp;#10;As explained before, you will hear loud screams and white noise in the real experiment. To get acquainted with these sounds you will now first hear a white noise. Afterwards we ask you to indicate how unpleasant this sound was for you.&amp;#10;&amp;#10;Please put the headphones on now.&amp;#10;&amp;#10;&lt;push the right arrow button to hear the sound&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_9">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_9" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="startle_ex">
      <SoundComponent name="startle_sound_ex">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="startle_sound_ex" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\whitenoise.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
    </Routine>
    <Routine name="rating_startle_ex">
      <SliderComponent name="startle_slider">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;neutral&quot;, &quot;very unpleasant&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="startle_slider" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_scream_2">
        <Param name="color" updates="constant" val="red" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_scream_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How unpleasant was the sound that you heard?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_13">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = true;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="win.mouseVisible = True" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if status_slider.status == FINISHED:&amp;#10;#    continueRoutine = False &amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="win.mouseVisible = False" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_13" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="intro_8">
      <TextComponent name="text_10">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_10" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next, you can get acquainted with the loud scream&amp;#10;&amp;#10;&lt;push the right arrow button to hear the loud scream&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="scream_ex">
      <SoundComponent name="startle_sound_ex_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="startle_sound_ex_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\scream.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
    </Routine>
    <Routine name="rating_scream_ex">
      <SliderComponent name="startle_slider_2">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;neutral&quot;, &quot;very unpleasant&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="startle_slider_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_scream_3">
        <Param name="color" updates="constant" val="red" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_scream_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How unpleasant was the scream that you heard?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_14">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = true;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="win.mouseVisible = True" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if status_slider.status == FINISHED:&amp;#10;#    continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="win.mouseVisible = False" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_14" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_1">
      <TextComponent name="text_11">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_11" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is the end of the task.&amp;#10;&amp;#10;A few questions will be asked now.&amp;#10;&amp;#10;You will see each image from the task again, but NO loud noises will be presented.&amp;#10;&amp;#10;&lt;push the right arrow button to start&gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_11" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="end_2">
      <TextComponent name="text_12">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_12" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Thank you very much for participating in this experiment! Please notify the researcher." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_12" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_18">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = false;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="win.mouseVisible = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_18" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_rating_pleasant">
      <SliderComponent name="pleasant_slider">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;unpleasant&quot;, &quot;neutral&quot;, &quot;very pleasant&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="pleasant_slider" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 50, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_pleasant">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_pleasant" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How pleasant did you find this picture?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_16">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = true;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="win.mouseVisible = True" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if pleasant_slider.status == FINISHED:&amp;#10;#    continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="item_text = Instructions_pleasant.text.strip();&amp;#10;custom_q.write((((((((((((((((expInfo[&quot;participant&quot;] + &quot;,&quot;) + stage) + &quot;,&quot;) + condition) + &quot;,&quot;) + distance) + &quot;,NA,NA,&quot;) + &quot;pic_pleasant&quot;) + &quot;,&quot;) + item_text) + &quot;,&quot;) + pleasant_slider.getRating().toString()) + &quot;,&quot;) + pleasant_slider.getRT().toString()) + &quot;\n&quot;));&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="&amp;#10;# get the item text and strip newlines/spaces&amp;#10;item_text = Instructions_pleasant.text.strip()&amp;#10;&amp;#10;# write entry into custom file&amp;#10;custom_q.write(expInfo['participant'] +','+ stage +','+ condition +','+ \&amp;#10;    distance +',NA,NA,'+ 'pic_pleasant' +','+ item_text +','+ \&amp;#10;    str(pleasant_slider.getRating()) +','+ str(pleasant_slider.getRT()) + '\n')&amp;#10;&amp;#10;# clear channels&amp;#10;#ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_16" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_rating_fear">
      <SliderComponent name="fear_slider">
        <Param name="borderColor" updates="constant" val="Black" valType="color"/>
        <Param name="color" updates="constant" val="Black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="num"/>
        <Param name="initVal" updates="None" val="" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;not afraid&quot;, &quot;very afraid&quot;)" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="fear_slider" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.04)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="()" valType="list"/>
        <Param name="styles" updates="constant" val="rating" valType="str"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(0, 100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="Instructions_fear">
        <Param name="color" updates="constant" val="red" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="Instructions_fear" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How afraid did you feel when you saw this picture?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code_17">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.window.mouseVisible = true;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="win.mouseVisible = True" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if fear_slider.status == FINISHED:&amp;#10;#    continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="item_text = Instructions_fear.text.strip();&amp;#10;custom_q.write((((((((((((((((expInfo[&quot;participant&quot;] + &quot;,&quot;) + stage) + &quot;,&quot;) + condition) + &quot;,&quot;) + distance) + &quot;,NA,NA,&quot;) + &quot;pic_fear&quot;) + &quot;,&quot;) + item_text) + &quot;,&quot;) + fear_slider.getRating().toString()) + &quot;,&quot;) + fear_slider.getRT().toString()) + &quot;\n&quot;));&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="&amp;#10;# get the item text and strip newlines/spaces&amp;#10;item_text = Instructions_fear.text.strip()&amp;#10;&amp;#10;# write entry into custom file&amp;#10;custom_q.write(expInfo['participant'] +','+ stage +','+ condition +','+ \&amp;#10;    distance +',NA,NA,'+ 'pic_fear' +','+ item_text +','+ \&amp;#10;    str(fear_slider.getRating()) +','+ str(fear_slider.getRT()) + '\n')&amp;#10;    &amp;#10;# clear channels&amp;#10;#ser.write(str.encode('00'))" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_17" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_imgs">
      <CodeComponent name="code_15">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((distance === &quot;far&quot;)) {&amp;#10;    size_factor = 16;&amp;#10;    time_factor = 4;&amp;#10;} else {&amp;#10;    if ((distance === &quot;near&quot;)) {&amp;#10;        size_factor = 2;&amp;#10;        time_factor = 1;&amp;#10;    } else {&amp;#10;        if ((distance === &quot;none&quot;)) {&amp;#10;            size_factor = 1;&amp;#10;            time_factor = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;img_size = [(x / size_factor), (y / size_factor)];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# define size and time factors for image&amp;#10;if distance == &quot;far&quot;:&amp;#10;    size_factor = 16&amp;#10;    time_factor = 4&amp;#10;elif distance == &quot;near&quot;:&amp;#10;    size_factor = 2&amp;#10;    time_factor = 1&amp;#10;elif distance == &quot;none&quot;:&amp;#10;    size_factor = 1&amp;#10;    time_factor = 0&amp;#10;&amp;#10;# set size of image, changes every repeat&amp;#10;img_size = (x/size_factor, y/size_factor)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_15" valType="code"/>
      </CodeComponent>
      <ImageComponent name="end_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$image" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="end_img" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="img_size" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="screamweak_ex">
      <SoundComponent name="weak_scream_ex">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="weak_scream_ex" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="sounds\screamweak.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="num"/>
      </SoundComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="intro_1"/>
    <Routine name="img_example"/>
    <Routine name="intro_2"/>
    <Routine name="antic_ex_1"/>
    <Routine name="attack_ex_1"/>
    <Routine name="intro_3"/>
    <Routine name="antic_ex_2"/>
    <Routine name="attack_ex_2"/>
    <Routine name="intro_4"/>
    <Routine name="intro_5"/>
    <Routine name="img_example_2"/>
    <Routine name="intro_6"/>
    <Routine name="start_practice"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'id': 1, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 2, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 3, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 4, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 5, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 6, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 7, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 8, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 9, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 10, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 11, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 12, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 13, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 14, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 15, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 16, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 17, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 18, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 19, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 20, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 21, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 22, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 23, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 24, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 25, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 26, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 27, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 28, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 29, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 30, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 31, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 32, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 33, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 34, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}, {'id': 35, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 4000, 'practice': 1}, {'id': 36, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'startle_start': 0, 'anticipation_dur': 3000, 'practice': 1}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_practice.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="0" valType="num"/>
      <Param name="name" updates="None" val="practice_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rest"/>
    <LoopInitiator loopType="TrialHandler" name="too_early_outer">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="100000" valType="num"/>
      <Param name="name" updates="None" val="too_early_outer" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="too_early_inner">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="too_early_inner" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="anticipation"/>
    <Routine name="too_early"/>
    <LoopTerminator name="too_early_inner"/>
    <LoopTerminator name="too_early_outer"/>
    <Routine name="attack"/>
    <Routine name="attack_feedback"/>
    <LoopTerminator name="practice_trials"/>
    <Routine name="intro_7"/>
    <Routine name="startle_ex"/>
    <Routine name="rating_startle_ex"/>
    <Routine name="intro_8"/>
    <Routine name="scream_ex"/>
    <Routine name="rating_scream_ex"/>
    <Routine name="start_habituation"/>
    <Routine name="screamweak_ex"/>
    <LoopInitiator loopType="TrialHandler" name="habituation_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'id': 1, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': -3000, 'startle_start': 4716, 'post_startle_dur': 1640, 'anticipation_dur': 6356, 'practice': 2}, {'id': 2, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4287, 'post_startle_dur': 3132, 'anticipation_dur': 7419, 'practice': 2}, {'id': 3, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 3491, 'post_startle_dur': 1232, 'anticipation_dur': 4723, 'practice': 2}, {'id': 4, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5238, 'post_startle_dur': 1447, 'anticipation_dur': 6685, 'practice': 2}, {'id': 5, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5229, 'post_startle_dur': 2443, 'anticipation_dur': 7672, 'practice': 2}, {'id': 6, 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 3857, 'post_startle_dur': 1396, 'anticipation_dur': 5253, 'practice': 2}, {'id': 7, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 5394, 'post_startle_dur': 2873, 'anticipation_dur': 8267, 'practice': 2}, {'id': 8, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 3684, 'post_startle_dur': 2777, 'anticipation_dur': 6461, 'practice': 2}, {'id': 9, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 5367, 'post_startle_dur': 2900, 'anticipation_dur': 8267, 'practice': 2}, {'id': 10, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 5459, 'post_startle_dur': 2623, 'anticipation_dur': 8082, 'practice': 2}, {'id': 11, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 5152, 'post_startle_dur': 1465, 'anticipation_dur': 6617, 'practice': 2}, {'id': 12, 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5812, 'post_startle_dur': 2576, 'anticipation_dur': 8388, 'practice': 2}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_habituation.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="habituation_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rest"/>
    <Routine name="anticipation"/>
    <Routine name="attack"/>
    <Routine name="rating_relief"/>
    <Routine name="rating_scream"/>
    <LoopTerminator name="habituation_trials"/>
    <Routine name="start_real_task"/>
    <LoopInitiator loopType="TrialHandler" name="task_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'id': 1, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 4716, 'anticipation_dur': 6356, 'practice': 0}, {'id': 2, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 4287, 'anticipation_dur': 7419, 'practice': 0}, {'id': 3, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 3491, 'anticipation_dur': 4723, 'practice': 0}, {'id': 4, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5238, 'anticipation_dur': 6685, 'practice': 0}, {'id': 5, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 5229, 'anticipation_dur': 7672, 'practice': 0}, {'id': 6, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 3857, 'anticipation_dur': 5253, 'practice': 0}, {'id': 7, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5394, 'anticipation_dur': 8267, 'practice': 0}, {'id': 8, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': False, 'fix_adj': -3000, 'startle_start': 3684, 'anticipation_dur': 6461, 'practice': 0}, {'id': 9, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5367, 'anticipation_dur': 8267, 'practice': 0}, {'id': 10, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': False, 'fix_adj': -3000, 'startle_start': 5459, 'anticipation_dur': 8082, 'practice': 0}, {'id': 11, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 5152, 'anticipation_dur': 6617, 'practice': 0}, {'id': 12, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5812, 'anticipation_dur': 8388, 'practice': 0}, {'id': 13, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 4455, 'anticipation_dur': 7392, 'practice': 0}, {'id': 14, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 5952, 'anticipation_dur': 8625, 'practice': 0}, {'id': 15, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 3389, 'anticipation_dur': 5242, 'practice': 0}, {'id': 16, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 3478, 'anticipation_dur': 5707, 'practice': 0}, {'id': 17, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': False, 'fix_adj': 3000, 'startle_start': 5751, 'anticipation_dur': 9114, 'practice': 0}, {'id': 18, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 4197, 'anticipation_dur': 6563, 'practice': 0}, {'id': 19, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5236, 'anticipation_dur': 7974, 'practice': 0}, {'id': 20, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5827, 'anticipation_dur': 7589, 'practice': 0}, {'id': 21, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 5876, 'anticipation_dur': 8308, 'practice': 0}, {'id': 22, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5573, 'anticipation_dur': 6649, 'practice': 0}, {'id': 23, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5479, 'anticipation_dur': 8499, 'practice': 0}, {'id': 24, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5014, 'anticipation_dur': 8042, 'practice': 0}, {'id': 25, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 4283, 'anticipation_dur': 5325, 'practice': 0}, {'id': 26, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5232, 'anticipation_dur': 8561, 'practice': 0}, {'id': 27, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': False, 'fix_adj': -3000, 'startle_start': 5263, 'anticipation_dur': 8367, 'practice': 0}, {'id': 28, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4509, 'anticipation_dur': 7391, 'practice': 0}, {'id': 29, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4678, 'anticipation_dur': 6594, 'practice': 0}, {'id': 30, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 4391, 'anticipation_dur': 6258, 'practice': 0}, {'id': 31, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4838, 'anticipation_dur': 5962, 'practice': 0}, {'id': 32, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5216, 'anticipation_dur': 5951, 'practice': 0}, {'id': 33, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 3304, 'anticipation_dur': 4989, 'practice': 0}, {'id': 34, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5895, 'anticipation_dur': 6920, 'practice': 0}, {'id': 35, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 3198, 'anticipation_dur': 3951, 'practice': 0}, {'id': 36, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 5203, 'anticipation_dur': 8041, 'practice': 0}, {'id': 37, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4886, 'anticipation_dur': 6264, 'practice': 0}, {'id': 38, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4124, 'anticipation_dur': 7167, 'practice': 0}, {'id': 39, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 5214, 'anticipation_dur': 8025, 'practice': 0}, {'id': 40, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5528, 'anticipation_dur': 6425, 'practice': 0}, {'id': 41, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 3462, 'anticipation_dur': 5361, 'practice': 0}, {'id': 42, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': True, 'startle': True, 'fix_adj': -3000, 'startle_start': 5704, 'anticipation_dur': 7954, 'practice': 0}, {'id': 43, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 3825, 'anticipation_dur': 6783, 'practice': 0}, {'id': 44, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5752, 'anticipation_dur': 7334, 'practice': 0}, {'id': 45, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 4741, 'anticipation_dur': 7503, 'practice': 0}, {'id': 46, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4798, 'anticipation_dur': 6784, 'practice': 0}, {'id': 47, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5037, 'anticipation_dur': 6459, 'practice': 0}, {'id': 48, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4785, 'anticipation_dur': 7727, 'practice': 0}, {'id': 49, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': True, 'startle': True, 'fix_adj': 3000, 'startle_start': 3128, 'anticipation_dur': 6379, 'practice': 0}, {'id': 50, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4025, 'anticipation_dur': 4836, 'practice': 0}, {'id': 51, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 5178, 'anticipation_dur': 6729, 'practice': 0}, {'id': 52, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5067, 'anticipation_dur': 8002, 'practice': 0}, {'id': 53, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 4186, 'anticipation_dur': 6761, 'practice': 0}, {'id': 54, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 3218, 'anticipation_dur': 4061, 'practice': 0}, {'id': 55, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 3563, 'anticipation_dur': 5069, 'practice': 0}, {'id': 56, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 5210, 'anticipation_dur': 8618, 'practice': 0}, {'id': 57, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': True, 'startle': True, 'fix_adj': 0, 'startle_start': 5972, 'anticipation_dur': 7434, 'practice': 0}, {'id': 58, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4463, 'anticipation_dur': 6364, 'practice': 0}, {'id': 59, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5052, 'anticipation_dur': 8327, 'practice': 0}, {'id': 60, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'far', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 5098, 'anticipation_dur': 6821, 'practice': 0}, {'id': 61, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5203, 'anticipation_dur': 8363, 'practice': 0}, {'id': 62, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': True, 'startle': False, 'fix_adj': -3000, 'startle_start': 3258, 'anticipation_dur': 4496, 'practice': 0}, {'id': 63, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5979, 'anticipation_dur': 7727, 'practice': 0}, {'id': 64, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4867, 'anticipation_dur': 6939, 'practice': 0}, {'id': 65, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 3978, 'anticipation_dur': 4920, 'practice': 0}, {'id': 66, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5738, 'anticipation_dur': 9056, 'practice': 0}, {'id': 67, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': -3000, 'startle_start': 3036, 'anticipation_dur': 5381, 'practice': 0}, {'id': 68, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': False, 'fix_adj': -3000, 'startle_start': 4717, 'anticipation_dur': 6332, 'practice': 0}, {'id': 69, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 5929, 'anticipation_dur': 6892, 'practice': 0}, {'id': 70, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'none', 'attac': False, 'startle': True, 'fix_adj': 3000, 'startle_start': 4883, 'anticipation_dur': 5889, 'practice': 0}, {'id': 71, 'stage': 'task', 'condition': 'Safe', 'image': 'pics2\\Safe2.png', 'distance': 'near', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 5819, 'anticipation_dur': 8337, 'practice': 0}, {'id': 72, 'stage': 'task', 'condition': 'Threat', 'image': 'pics2\\Threat2.png', 'distance': 'far', 'attac': False, 'startle': True, 'fix_adj': 0, 'startle_start': 4786, 'anticipation_dur': 7149, 'practice': 0}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_task.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="task_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rest"/>
    <Routine name="anticipation"/>
    <Routine name="attack"/>
    <Routine name="rating_relief"/>
    <Routine name="rating_scream"/>
    <LoopTerminator name="task_trials"/>
    <Routine name="end_1"/>
    <LoopInitiator loopType="TrialHandler" name="end_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'id': 1, 'condition': 'Threat', 'distance': 'near'}, {'id': 2, 'condition': 'Threat', 'distance': 'far'}, {'id': 3, 'condition': 'Threat', 'distance': 'none'}, {'id': 4, 'condition': 'Safe', 'distance': 'near'}, {'id': 5, 'condition': 'Safe', 'distance': 'far'}, {'id': 6, 'condition': 'Safe', 'distance': 'none'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="end_q.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="end_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="end_imgs"/>
    <Routine name="end_rating_fear"/>
    <Routine name="end_rating_pleasant"/>
    <LoopTerminator name="end_trials"/>
    <Routine name="end_2"/>
  </Flow>
</PsychoPy2experiment>
